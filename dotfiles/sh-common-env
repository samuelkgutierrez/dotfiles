################################################################################
# cvs
################################################################################
export CVS_RSH=ssh

################################################################################
# svn
################################################################################
# set default editor to nvim
export SVN_EDITOR=nvim

################################################################################
# cscope
################################################################################
# use vim
export EDITOR=nvim

################################################################################
# Default access permissions
################################################################################
umask 027

################################################################################
# Environment modules
################################################################################
if [[ -n $MODULESHOME ]]; then
    source "$MODULESHOME/init/bash"
fi

################################################################################
# Cluster environment setup
################################################################################
function on_lanl_cluster_fe()
{
    hostname | grep -E -o '^[a-z]{2}-fe.*$' > /dev/null
    return 0
    return $?
}

function setup_cluster_env()
{
    local plat_name=$(hostname | grep -E -o '^[a-z]{2}')
    local hpct_path=/usr/projects/hpctools/samuel

    export PLAT_NAME=$plat_name
    # Set my plat "home" in hpctools space
    export PLATHOME="$hpct_path/plats/$PLAT_NAME"
    # Add useful alias to easily cd into $PLATHOME
    alias cdplat="cd $PLATHOME"

    # Source platform-specific rc if present
    local platrc="$HOME/.bashrc-$plat_name"
    [[ -f $platrc ]] && source $platrc
}

# Setup cluster-specific environment if on a LANL cluster front-end.
on_lanl_cluster_fe && setup_cluster_env

################################################################################
# dotkit
################################################################################
# if we have a local installation of dotkit, then use it
if [[ -d $HOME/local/dotkit ]]; then
    eval `$HOME/local/dotkit/init`
    use -q dotkit 2>&1 > /dev/null
fi

################################################################################
# Directory colors
################################################################################
if [[ -f ~/.dir_colors/dircolors ]]; then
    eval `dircolors ~/.dir_colors/dircolors`
fi

################################################################################
# PATH
################################################################################
export PATH=\
$HOME/.cargo/bin:\
$HOME/.local/bin:\
/usr/local/bin:\
/Users/samuel/Library/Python/3.9/bin:\
/opt/homebrew/bin:\
$PATH
